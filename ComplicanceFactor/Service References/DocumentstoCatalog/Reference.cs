//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComplicanceFactor.DocumentstoCatalog {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="DocumentstoCatalog.ListsSoap")]
    public interface ListsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetList(string listName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListAndView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListAndView(string listName, string viewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/DeleteList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteList(string listName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/AddList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AddList(string listName, string description, int templateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/AddListFromFeature", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AddListFromFeature(string listName, string description, System.Guid featureID, int templateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateList(string listName, System.Xml.XmlNode listProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string listVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListCollection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItems(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string webID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListItemChanges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItemChanges(string listName, System.Xml.XmlNode viewFields, string since, System.Xml.XmlNode contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesWithKnowledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItemChangesWithKnowledge(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string syncScope, System.Xml.XmlNode knowledge, System.Xml.XmlNode contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesSinceToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItemChangesSinceToken(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string changeToken, System.Xml.XmlNode contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateListItems(string listName, System.Xml.XmlNode updates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateListItemsWithKnowledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateListItemsWithKnowledge(string listName, System.Xml.XmlNode updates, string syncScope, System.Xml.XmlNode knowledge);
        
        // CODEGEN: Parameter 'message' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/AddDiscussionBoardItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemResponse AddDiscussionBoardItem(ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/AddWikiPage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AddWikiPage(string strListName, string listRelPageUrl, string wikiContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetVersionCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetVersionCollection(string strlistID, string strlistItemID, string strFieldName);
        
        // CODEGEN: Parameter 'attachment' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/AddAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ComplicanceFactor.DocumentstoCatalog.AddAttachmentResponse AddAttachment(ComplicanceFactor.DocumentstoCatalog.AddAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetAttachmentCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetAttachmentCollection(string listName, string listItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/DeleteAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteAttachment(string listName, string listItemID, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/CheckOutFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckOutFile(string pageUrl, string checkoutToLocal, string lastmodified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UndoCheckOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UndoCheckOut(string pageUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/CheckInFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckInFile(string pageUrl, string comment, string CheckinType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListContentTypes(string listName, string contentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypesAndProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListContentTypesAndProperties(string listName, string contentTypeId, string propertyPrefix, bool includeWebProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetListContentType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListContentType(string listName, string contentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/CreateContentType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateContentType(string listName, string displayName, string parentType, System.Xml.XmlNode fields, System.Xml.XmlNode contentTypeProperties, string addToView);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateContentType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateContentType(string listName, string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string addToView);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/DeleteContentType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DeleteContentType(string listName, string contentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateContentTypeXmlDocument(string listName, string contentTypeId, System.Xml.XmlNode newDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypesXmlDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateContentTypesXmlDocument(string listName, System.Xml.XmlNode newDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/DeleteContentTypeXmlDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DeleteContentTypeXmlDocument(string listName, string contentTypeId, string documentUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ApplyContentTypeToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ApplyContentTypeToList(string webUrl, string contentTypeId, string listName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddDiscussionBoardItem", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/", IsWrapped=true)]
    public partial class AddDiscussionBoardItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public string listName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] message;
        
        public AddDiscussionBoardItemRequest() {
        }
        
        public AddDiscussionBoardItemRequest(string listName, byte[] message) {
            this.listName = listName;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddDiscussionBoardItemResponse", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/", IsWrapped=true)]
    public partial class AddDiscussionBoardItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public System.Xml.XmlNode AddDiscussionBoardItemResult;
        
        public AddDiscussionBoardItemResponse() {
        }
        
        public AddDiscussionBoardItemResponse(System.Xml.XmlNode AddDiscussionBoardItemResult) {
            this.AddDiscussionBoardItemResult = AddDiscussionBoardItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAttachment", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/", IsWrapped=true)]
    public partial class AddAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public string listName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=1)]
        public string listItemID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] attachment;
        
        public AddAttachmentRequest() {
        }
        
        public AddAttachmentRequest(string listName, string listItemID, string fileName, byte[] attachment) {
            this.listName = listName;
            this.listItemID = listItemID;
            this.fileName = fileName;
            this.attachment = attachment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAttachmentResponse", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/", IsWrapped=true)]
    public partial class AddAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public string AddAttachmentResult;
        
        public AddAttachmentResponse() {
        }
        
        public AddAttachmentResponse(string AddAttachmentResult) {
            this.AddAttachmentResult = AddAttachmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ListsSoapChannel : ComplicanceFactor.DocumentstoCatalog.ListsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListsSoapClient : System.ServiceModel.ClientBase<ComplicanceFactor.DocumentstoCatalog.ListsSoap>, ComplicanceFactor.DocumentstoCatalog.ListsSoap {
        
        public ListsSoapClient() {
        }
        
        public ListsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ListsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode GetList(string listName) {
            return base.Channel.GetList(listName);
        }
        
        public System.Xml.XmlNode GetListAndView(string listName, string viewName) {
            return base.Channel.GetListAndView(listName, viewName);
        }
        
        public void DeleteList(string listName) {
            base.Channel.DeleteList(listName);
        }
        
        public System.Xml.XmlNode AddList(string listName, string description, int templateID) {
            return base.Channel.AddList(listName, description, templateID);
        }
        
        public System.Xml.XmlNode AddListFromFeature(string listName, string description, System.Guid featureID, int templateID) {
            return base.Channel.AddListFromFeature(listName, description, featureID, templateID);
        }
        
        public System.Xml.XmlNode UpdateList(string listName, System.Xml.XmlNode listProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string listVersion) {
            return base.Channel.UpdateList(listName, listProperties, newFields, updateFields, deleteFields, listVersion);
        }
        
        public System.Xml.XmlNode GetListCollection() {
            return base.Channel.GetListCollection();
        }
        
        public System.Xml.XmlNode GetListItems(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string webID) {
            return base.Channel.GetListItems(listName, viewName, query, viewFields, rowLimit, queryOptions, webID);
        }
        
        public System.Xml.XmlNode GetListItemChanges(string listName, System.Xml.XmlNode viewFields, string since, System.Xml.XmlNode contains) {
            return base.Channel.GetListItemChanges(listName, viewFields, since, contains);
        }
        
        public System.Xml.XmlNode GetListItemChangesWithKnowledge(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string syncScope, System.Xml.XmlNode knowledge, System.Xml.XmlNode contains) {
            return base.Channel.GetListItemChangesWithKnowledge(listName, viewName, query, viewFields, rowLimit, queryOptions, syncScope, knowledge, contains);
        }
        
        public System.Xml.XmlNode GetListItemChangesSinceToken(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string changeToken, System.Xml.XmlNode contains) {
            return base.Channel.GetListItemChangesSinceToken(listName, viewName, query, viewFields, rowLimit, queryOptions, changeToken, contains);
        }
        
        public System.Xml.XmlNode UpdateListItems(string listName, System.Xml.XmlNode updates) {
            return base.Channel.UpdateListItems(listName, updates);
        }
        
        public System.Xml.XmlNode UpdateListItemsWithKnowledge(string listName, System.Xml.XmlNode updates, string syncScope, System.Xml.XmlNode knowledge) {
            return base.Channel.UpdateListItemsWithKnowledge(listName, updates, syncScope, knowledge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemResponse ComplicanceFactor.DocumentstoCatalog.ListsSoap.AddDiscussionBoardItem(ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemRequest request) {
            return base.Channel.AddDiscussionBoardItem(request);
        }
        
        public System.Xml.XmlNode AddDiscussionBoardItem(string listName, byte[] message) {
            ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemRequest inValue = new ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemRequest();
            inValue.listName = listName;
            inValue.message = message;
            ComplicanceFactor.DocumentstoCatalog.AddDiscussionBoardItemResponse retVal = ((ComplicanceFactor.DocumentstoCatalog.ListsSoap)(this)).AddDiscussionBoardItem(inValue);
            return retVal.AddDiscussionBoardItemResult;
        }
        
        public System.Xml.XmlNode AddWikiPage(string strListName, string listRelPageUrl, string wikiContent) {
            return base.Channel.AddWikiPage(strListName, listRelPageUrl, wikiContent);
        }
        
        public System.Xml.XmlNode GetVersionCollection(string strlistID, string strlistItemID, string strFieldName) {
            return base.Channel.GetVersionCollection(strlistID, strlistItemID, strFieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ComplicanceFactor.DocumentstoCatalog.AddAttachmentResponse ComplicanceFactor.DocumentstoCatalog.ListsSoap.AddAttachment(ComplicanceFactor.DocumentstoCatalog.AddAttachmentRequest request) {
            return base.Channel.AddAttachment(request);
        }
        
        public string AddAttachment(string listName, string listItemID, string fileName, byte[] attachment) {
            ComplicanceFactor.DocumentstoCatalog.AddAttachmentRequest inValue = new ComplicanceFactor.DocumentstoCatalog.AddAttachmentRequest();
            inValue.listName = listName;
            inValue.listItemID = listItemID;
            inValue.fileName = fileName;
            inValue.attachment = attachment;
            ComplicanceFactor.DocumentstoCatalog.AddAttachmentResponse retVal = ((ComplicanceFactor.DocumentstoCatalog.ListsSoap)(this)).AddAttachment(inValue);
            return retVal.AddAttachmentResult;
        }
        
        public System.Xml.XmlNode GetAttachmentCollection(string listName, string listItemID) {
            return base.Channel.GetAttachmentCollection(listName, listItemID);
        }
        
        public void DeleteAttachment(string listName, string listItemID, string url) {
            base.Channel.DeleteAttachment(listName, listItemID, url);
        }
        
        public bool CheckOutFile(string pageUrl, string checkoutToLocal, string lastmodified) {
            return base.Channel.CheckOutFile(pageUrl, checkoutToLocal, lastmodified);
        }
        
        public bool UndoCheckOut(string pageUrl) {
            return base.Channel.UndoCheckOut(pageUrl);
        }
        
        public bool CheckInFile(string pageUrl, string comment, string CheckinType) {
            return base.Channel.CheckInFile(pageUrl, comment, CheckinType);
        }
        
        public System.Xml.XmlNode GetListContentTypes(string listName, string contentTypeId) {
            return base.Channel.GetListContentTypes(listName, contentTypeId);
        }
        
        public System.Xml.XmlNode GetListContentTypesAndProperties(string listName, string contentTypeId, string propertyPrefix, bool includeWebProperties) {
            return base.Channel.GetListContentTypesAndProperties(listName, contentTypeId, propertyPrefix, includeWebProperties);
        }
        
        public System.Xml.XmlNode GetListContentType(string listName, string contentTypeId) {
            return base.Channel.GetListContentType(listName, contentTypeId);
        }
        
        public string CreateContentType(string listName, string displayName, string parentType, System.Xml.XmlNode fields, System.Xml.XmlNode contentTypeProperties, string addToView) {
            return base.Channel.CreateContentType(listName, displayName, parentType, fields, contentTypeProperties, addToView);
        }
        
        public System.Xml.XmlNode UpdateContentType(string listName, string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string addToView) {
            return base.Channel.UpdateContentType(listName, contentTypeId, contentTypeProperties, newFields, updateFields, deleteFields, addToView);
        }
        
        public System.Xml.XmlNode DeleteContentType(string listName, string contentTypeId) {
            return base.Channel.DeleteContentType(listName, contentTypeId);
        }
        
        public System.Xml.XmlNode UpdateContentTypeXmlDocument(string listName, string contentTypeId, System.Xml.XmlNode newDocument) {
            return base.Channel.UpdateContentTypeXmlDocument(listName, contentTypeId, newDocument);
        }
        
        public System.Xml.XmlNode UpdateContentTypesXmlDocument(string listName, System.Xml.XmlNode newDocument) {
            return base.Channel.UpdateContentTypesXmlDocument(listName, newDocument);
        }
        
        public System.Xml.XmlNode DeleteContentTypeXmlDocument(string listName, string contentTypeId, string documentUri) {
            return base.Channel.DeleteContentTypeXmlDocument(listName, contentTypeId, documentUri);
        }
        
        public System.Xml.XmlNode ApplyContentTypeToList(string webUrl, string contentTypeId, string listName) {
            return base.Channel.ApplyContentTypeToList(webUrl, contentTypeId, listName);
        }
    }
}
